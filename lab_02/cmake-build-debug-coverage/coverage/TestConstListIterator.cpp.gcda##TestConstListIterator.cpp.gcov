        -:    0:Source:/home/denis/OOP/lab_02/tests/TestConstListIterator.cpp
        -:    0:Graph:/home/denis/OOP/lab_02/cmake-build-debug-coverage/CMakeFiles/lab_02_oop_tests.dir/tests/TestConstListIterator.cpp.gcno
        -:    0:Data:/home/denis/OOP/lab_02/cmake-build-debug-coverage/CMakeFiles/lab_02_oop_tests.dir/tests/TestConstListIterator.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by denis on 24.04.2021.
        -:    3://
        -:    4:
        -:    5:#include "gtest/gtest.h"
        -:    6:#include "ConstListIterator.hpp"
        -:    7:
        4:    8:TEST(ConstListIterator, emptyConstructor)
        -:    9:{
        1:   10:    auto iterator = denis::constListIterator<int>();
       1*:   11:    ASSERT_EQ(iterator.isInvalid(), true);
        -:   12:}
------------------
_ZN39ConstListIterator_emptyConstructor_TestC2Ev:
        1:    8:TEST(ConstListIterator, emptyConstructor)
        1:    8-block  0
------------------
_ZN39ConstListIterator_emptyConstructor_TestD0Ev:
        1:    8:TEST(ConstListIterator, emptyConstructor)
        1:    8-block  0
------------------
_ZN39ConstListIterator_emptyConstructor_TestD2Ev:
        1:    8:TEST(ConstListIterator, emptyConstructor)
        1:    8-block  0
------------------
_ZN39ConstListIterator_emptyConstructor_Test8TestBodyEv:
        1:    8:TEST(ConstListIterator, emptyConstructor)
        -:    9:{
        1:   10:    auto iterator = denis::constListIterator<int>();
        1:   10-block  0
    $$$$$:   10-block  1
       1*:   11:    ASSERT_EQ(iterator.isInvalid(), true);
        1:   11-block  0
    %%%%%:   11-block  1
    %%%%%:   11-block  2
    %%%%%:   11-block  3
    %%%%%:   11-block  4
    $$$$$:   11-block  5
    $$$$$:   11-block  6
    $$$$$:   11-block  7
    $$$$$:   11-block  8
    $$$$$:   11-block  9
    $$$$$:   11-block 10
    $$$$$:   11-block 11
        -:   12:}
------------------
        -:   13:
        4:   14:TEST(ConstListIterator, sharedConstructor)
        -:   15:{
        1:   16:    auto sharedNode = std::make_shared<denis::listNode<int>>(10);
        1:   17:    auto iterator = denis::constListIterator<int>(sharedNode);
        -:   18:
       1*:   19:    ASSERT_EQ(iterator.isInvalid(), false);
        -:   20:}
------------------
_ZN40ConstListIterator_sharedConstructor_TestC2Ev:
        1:   14:TEST(ConstListIterator, sharedConstructor)
        1:   14-block  0
------------------
_ZN40ConstListIterator_sharedConstructor_TestD0Ev:
        1:   14:TEST(ConstListIterator, sharedConstructor)
        1:   14-block  0
------------------
_ZN40ConstListIterator_sharedConstructor_TestD2Ev:
        1:   14:TEST(ConstListIterator, sharedConstructor)
        1:   14-block  0
------------------
_ZN40ConstListIterator_sharedConstructor_Test8TestBodyEv:
        1:   14:TEST(ConstListIterator, sharedConstructor)
        -:   15:{
        1:   16:    auto sharedNode = std::make_shared<denis::listNode<int>>(10);
        1:   16-block  0
    $$$$$:   16-block  1
    $$$$$:   16-block  2
        1:   17:    auto iterator = denis::constListIterator<int>(sharedNode);
        1:   17-block  0
    $$$$$:   17-block  1
        -:   18:
       1*:   19:    ASSERT_EQ(iterator.isInvalid(), false);
        1:   19-block  0
    %%%%%:   19-block  1
    %%%%%:   19-block  2
    %%%%%:   19-block  3
    %%%%%:   19-block  4
    $$$$$:   19-block  5
    $$$$$:   19-block  6
    $$$$$:   19-block  7
    $$$$$:   19-block  8
    $$$$$:   19-block  9
    $$$$$:   19-block 10
    $$$$$:   19-block 11
        -:   20:}
------------------
        -:   21:
        4:   22:TEST(ConstListIterator, iteratorConstructor)
        -:   23:{
        1:   24:    auto sharedNode = std::make_shared<denis::listNode<int>>(10);
        1:   25:    auto iter1 = denis::constListIterator<int>(sharedNode);
        1:   26:    auto iter2 = denis::constListIterator<int>(iter1);
        -:   27:
       1*:   28:    ASSERT_EQ(iter1->get(), iter2->get());
        -:   29:}
------------------
_ZN42ConstListIterator_iteratorConstructor_TestC2Ev:
        1:   22:TEST(ConstListIterator, iteratorConstructor)
        1:   22-block  0
------------------
_ZN42ConstListIterator_iteratorConstructor_TestD0Ev:
        1:   22:TEST(ConstListIterator, iteratorConstructor)
        1:   22-block  0
------------------
_ZN42ConstListIterator_iteratorConstructor_TestD2Ev:
        1:   22:TEST(ConstListIterator, iteratorConstructor)
        1:   22-block  0
------------------
_ZN42ConstListIterator_iteratorConstructor_Test8TestBodyEv:
        1:   22:TEST(ConstListIterator, iteratorConstructor)
        -:   23:{
        1:   24:    auto sharedNode = std::make_shared<denis::listNode<int>>(10);
        1:   24-block  0
    $$$$$:   24-block  1
    $$$$$:   24-block  2
        1:   25:    auto iter1 = denis::constListIterator<int>(sharedNode);
        1:   25-block  0
    $$$$$:   25-block  1
        1:   26:    auto iter2 = denis::constListIterator<int>(iter1);
    $$$$$:   26-block  0
        -:   27:
       1*:   28:    ASSERT_EQ(iter1->get(), iter2->get());
        1:   28-block  0
    %%%%%:   28-block  1
    %%%%%:   28-block  2
    %%%%%:   28-block  3
    %%%%%:   28-block  4
    $$$$$:   28-block  5
    $$$$$:   28-block  6
    $$$$$:   28-block  7
    $$$$$:   28-block  8
    $$$$$:   28-block  9
        -:   29:}
------------------
        -:   30:
        4:   31:TEST(ConstListIterator, nextFunc)
        -:   32:{
        1:   33:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   34:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   35:    node1->setNextNode(node2);
        1:   36:    auto iter = denis::constListIterator<int>(node1);
       1*:   37:    ASSERT_EQ(iter->get(), 10);
        1:   38:    iter.next();
       1*:   39:    ASSERT_EQ(iter->get(), 15);
       1*:   40:    ASSERT_EQ((*iter).get(), 15);
        -:   41:}
------------------
_ZN31ConstListIterator_nextFunc_TestC2Ev:
        1:   31:TEST(ConstListIterator, nextFunc)
        1:   31-block  0
------------------
_ZN31ConstListIterator_nextFunc_TestD0Ev:
        1:   31:TEST(ConstListIterator, nextFunc)
        1:   31-block  0
------------------
_ZN31ConstListIterator_nextFunc_TestD2Ev:
        1:   31:TEST(ConstListIterator, nextFunc)
        1:   31-block  0
------------------
_ZN31ConstListIterator_nextFunc_Test8TestBodyEv:
        1:   31:TEST(ConstListIterator, nextFunc)
        -:   32:{
        1:   33:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   33-block  0
    $$$$$:   33-block  1
    $$$$$:   33-block  2
        1:   34:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   34-block  0
    $$$$$:   34-block  1
    $$$$$:   34-block  2
        1:   35:    node1->setNextNode(node2);
        1:   35-block  0
        1:   36:    auto iter = denis::constListIterator<int>(node1);
    $$$$$:   36-block  0
       1*:   37:    ASSERT_EQ(iter->get(), 10);
        1:   37-block  0
    %%%%%:   37-block  1
    %%%%%:   37-block  2
    %%%%%:   37-block  3
    %%%%%:   37-block  4
    $$$$$:   37-block  5
    $$$$$:   37-block  6
    $$$$$:   37-block  7
    $$$$$:   37-block  8
    $$$$$:   37-block  9
    $$$$$:   37-block 10
        1:   38:    iter.next();
        1:   38-block  0
       1*:   39:    ASSERT_EQ(iter->get(), 15);
        1:   39-block  0
        1:   39-block  1
    %%%%%:   39-block  2
    %%%%%:   39-block  3
    %%%%%:   39-block  4
    %%%%%:   39-block  5
    $$$$$:   39-block  6
    $$$$$:   39-block  7
    $$$$$:   39-block  8
    $$$$$:   39-block  9
    $$$$$:   39-block 10
    $$$$$:   39-block 11
       1*:   40:    ASSERT_EQ((*iter).get(), 15);
        1:   40-block  0
        1:   40-block  1
    %%%%%:   40-block  2
    %%%%%:   40-block  3
    %%%%%:   40-block  4
    %%%%%:   40-block  5
    $$$$$:   40-block  6
    $$$$$:   40-block  7
    $$$$$:   40-block  8
    $$$$$:   40-block  9
    $$$$$:   40-block 10
    $$$$$:   40-block 11
        -:   41:}
------------------
        -:   42:
        4:   43:TEST(ConstListIterator, operatorPlusEqual)
        -:   44:{
        1:   45:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   46:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   47:    auto node3 = std::make_shared<denis::listNode<int>>(20);
        1:   48:    node2->setNextNode(node3);
        1:   49:    node1->setNextNode(node2);
        1:   50:    auto iter = denis::constListIterator<int>(node1);
       1*:   51:    ASSERT_EQ(iter->get(), 10);
        1:   52:    iter += 2;
       1*:   53:    ASSERT_EQ(iter->get(), 20);
       1*:   54:    ASSERT_EQ((*iter).get(), 20);
        -:   55:}
------------------
_ZN40ConstListIterator_operatorPlusEqual_TestC2Ev:
        1:   43:TEST(ConstListIterator, operatorPlusEqual)
        1:   43-block  0
------------------
_ZN40ConstListIterator_operatorPlusEqual_TestD0Ev:
        1:   43:TEST(ConstListIterator, operatorPlusEqual)
        1:   43-block  0
------------------
_ZN40ConstListIterator_operatorPlusEqual_TestD2Ev:
        1:   43:TEST(ConstListIterator, operatorPlusEqual)
        1:   43-block  0
------------------
_ZN40ConstListIterator_operatorPlusEqual_Test8TestBodyEv:
        1:   43:TEST(ConstListIterator, operatorPlusEqual)
        -:   44:{
        1:   45:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   45-block  0
    $$$$$:   45-block  1
    $$$$$:   45-block  2
        1:   46:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   46-block  0
    $$$$$:   46-block  1
    $$$$$:   46-block  2
        1:   47:    auto node3 = std::make_shared<denis::listNode<int>>(20);
        1:   47-block  0
    $$$$$:   47-block  1
    $$$$$:   47-block  2
        1:   48:    node2->setNextNode(node3);
        1:   48-block  0
        1:   49:    node1->setNextNode(node2);
        1:   50:    auto iter = denis::constListIterator<int>(node1);
    $$$$$:   50-block  0
       1*:   51:    ASSERT_EQ(iter->get(), 10);
        1:   51-block  0
    %%%%%:   51-block  1
    %%%%%:   51-block  2
    %%%%%:   51-block  3
    %%%%%:   51-block  4
    $$$$$:   51-block  5
    $$$$$:   51-block  6
    $$$$$:   51-block  7
    $$$$$:   51-block  8
    $$$$$:   51-block  9
    $$$$$:   51-block 10
        1:   52:    iter += 2;
        1:   52-block  0
    $$$$$:   52-block  1
       1*:   53:    ASSERT_EQ(iter->get(), 20);
        1:   53-block  0
        1:   53-block  1
    %%%%%:   53-block  2
    %%%%%:   53-block  3
    %%%%%:   53-block  4
    %%%%%:   53-block  5
    $$$$$:   53-block  6
    $$$$$:   53-block  7
    $$$$$:   53-block  8
    $$$$$:   53-block  9
    $$$$$:   53-block 10
    $$$$$:   53-block 11
       1*:   54:    ASSERT_EQ((*iter).get(), 20);
        1:   54-block  0
        1:   54-block  1
    %%%%%:   54-block  2
    %%%%%:   54-block  3
    %%%%%:   54-block  4
    %%%%%:   54-block  5
    $$$$$:   54-block  6
    $$$$$:   54-block  7
    $$$$$:   54-block  8
    $$$$$:   54-block  9
    $$$$$:   54-block 10
    $$$$$:   54-block 11
        -:   55:}
------------------
        -:   56:
        4:   57:TEST(ConstListIterator, operatorPlus)
        -:   58:{
        1:   59:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   60:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   61:    auto node3 = std::make_shared<denis::listNode<int>>(20);
        1:   62:    node2->setNextNode(node3);
        1:   63:    node1->setNextNode(node2);
        1:   64:    auto iter = denis::constListIterator<int>(node1);
       1*:   65:    ASSERT_EQ(iter->get(), 10);
        1:   66:    auto newIter = iter + 2;
       1*:   67:    ASSERT_EQ(newIter->get(), 20);
       1*:   68:    ASSERT_EQ((*newIter).get(), 20);
        -:   69:}
------------------
_ZN35ConstListIterator_operatorPlus_TestC2Ev:
        1:   57:TEST(ConstListIterator, operatorPlus)
        1:   57-block  0
------------------
_ZN35ConstListIterator_operatorPlus_TestD0Ev:
        1:   57:TEST(ConstListIterator, operatorPlus)
        1:   57-block  0
------------------
_ZN35ConstListIterator_operatorPlus_TestD2Ev:
        1:   57:TEST(ConstListIterator, operatorPlus)
        1:   57-block  0
------------------
_ZN35ConstListIterator_operatorPlus_Test8TestBodyEv:
        1:   57:TEST(ConstListIterator, operatorPlus)
        -:   58:{
        1:   59:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   59-block  0
    $$$$$:   59-block  1
    $$$$$:   59-block  2
        1:   60:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   60-block  0
    $$$$$:   60-block  1
    $$$$$:   60-block  2
        1:   61:    auto node3 = std::make_shared<denis::listNode<int>>(20);
        1:   61-block  0
    $$$$$:   61-block  1
    $$$$$:   61-block  2
        1:   62:    node2->setNextNode(node3);
        1:   62-block  0
        1:   63:    node1->setNextNode(node2);
        1:   64:    auto iter = denis::constListIterator<int>(node1);
    $$$$$:   64-block  0
       1*:   65:    ASSERT_EQ(iter->get(), 10);
        1:   65-block  0
    %%%%%:   65-block  1
    %%%%%:   65-block  2
    %%%%%:   65-block  3
    %%%%%:   65-block  4
    $$$$$:   65-block  5
    $$$$$:   65-block  6
    $$$$$:   65-block  7
    $$$$$:   65-block  8
    $$$$$:   65-block  9
    $$$$$:   65-block 10
        1:   66:    auto newIter = iter + 2;
        1:   66-block  0
    $$$$$:   66-block  1
    $$$$$:   66-block  2
       1*:   67:    ASSERT_EQ(newIter->get(), 20);
        1:   67-block  0
        1:   67-block  1
    %%%%%:   67-block  2
    %%%%%:   67-block  3
    %%%%%:   67-block  4
    %%%%%:   67-block  5
    $$$$$:   67-block  6
    $$$$$:   67-block  7
    $$$$$:   67-block  8
    $$$$$:   67-block  9
    $$$$$:   67-block 10
    $$$$$:   67-block 11
       1*:   68:    ASSERT_EQ((*newIter).get(), 20);
        1:   68-block  0
        1:   68-block  1
    %%%%%:   68-block  2
    %%%%%:   68-block  3
    %%%%%:   68-block  4
    %%%%%:   68-block  5
    $$$$$:   68-block  6
    $$$$$:   68-block  7
    $$$$$:   68-block  8
    $$$$$:   68-block  9
    $$$$$:   68-block 10
    $$$$$:   68-block 11
        -:   69:}
------------------
        -:   70:
        4:   71:TEST(ConstListIterator, operatorIncrement)
        -:   72:{
        1:   73:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   74:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   75:    auto node3 = std::make_shared<denis::listNode<int>>(20);
        1:   76:    node2->setNextNode(node3);
        1:   77:    node1->setNextNode(node2);
        1:   78:    auto iter = denis::constListIterator<int>(node1);
       1*:   79:    ASSERT_EQ(iter->get(), 10);
        1:   80:    iter++;
       1*:   81:    ASSERT_EQ(iter->get(), 15);
        1:   82:    iter++;
       1*:   83:    ASSERT_EQ(iter->get(), 20);
        -:   84:}
------------------
_ZN40ConstListIterator_operatorIncrement_TestC2Ev:
        1:   71:TEST(ConstListIterator, operatorIncrement)
        1:   71-block  0
------------------
_ZN40ConstListIterator_operatorIncrement_TestD0Ev:
        1:   71:TEST(ConstListIterator, operatorIncrement)
        1:   71-block  0
------------------
_ZN40ConstListIterator_operatorIncrement_TestD2Ev:
        1:   71:TEST(ConstListIterator, operatorIncrement)
        1:   71-block  0
------------------
_ZN40ConstListIterator_operatorIncrement_Test8TestBodyEv:
        1:   71:TEST(ConstListIterator, operatorIncrement)
        -:   72:{
        1:   73:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   73-block  0
    $$$$$:   73-block  1
    $$$$$:   73-block  2
        1:   74:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   74-block  0
    $$$$$:   74-block  1
    $$$$$:   74-block  2
        1:   75:    auto node3 = std::make_shared<denis::listNode<int>>(20);
        1:   75-block  0
    $$$$$:   75-block  1
    $$$$$:   75-block  2
        1:   76:    node2->setNextNode(node3);
        1:   76-block  0
        1:   77:    node1->setNextNode(node2);
        1:   78:    auto iter = denis::constListIterator<int>(node1);
    $$$$$:   78-block  0
       1*:   79:    ASSERT_EQ(iter->get(), 10);
        1:   79-block  0
    %%%%%:   79-block  1
    %%%%%:   79-block  2
    %%%%%:   79-block  3
    %%%%%:   79-block  4
    $$$$$:   79-block  5
    $$$$$:   79-block  6
    $$$$$:   79-block  7
    $$$$$:   79-block  8
    $$$$$:   79-block  9
    $$$$$:   79-block 10
        1:   80:    iter++;
        1:   80-block  0
        1:   80-block  1
       1*:   81:    ASSERT_EQ(iter->get(), 15);
        1:   81-block  0
    %%%%%:   81-block  1
    %%%%%:   81-block  2
    %%%%%:   81-block  3
    %%%%%:   81-block  4
    $$$$$:   81-block  5
    $$$$$:   81-block  6
    $$$$$:   81-block  7
    $$$$$:   81-block  8
    $$$$$:   81-block  9
    $$$$$:   81-block 10
        1:   82:    iter++;
        1:   82-block  0
        1:   82-block  1
       1*:   83:    ASSERT_EQ(iter->get(), 20);
        1:   83-block  0
    %%%%%:   83-block  1
    %%%%%:   83-block  2
    %%%%%:   83-block  3
    %%%%%:   83-block  4
    $$$$$:   83-block  5
    $$$$$:   83-block  6
    $$$$$:   83-block  7
    $$$$$:   83-block  8
    $$$$$:   83-block  9
    $$$$$:   83-block 10
        -:   84:}
------------------
        -:   85:
        -:   86:
        4:   87:TEST(ConstListIterator, operatorIsEqual)
        -:   88:{
        1:   89:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   90:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   91:    auto node3 = std::make_shared<denis::listNode<int>>(20);
        1:   92:    node2->setNextNode(node3);
        1:   93:    node1->setNextNode(node2);
        1:   94:    auto iter = denis::constListIterator<int>(node1);
        1:   95:    auto iter2 = denis::constListIterator<int>(iter);
       1*:   96:    ASSERT_EQ(iter == iter2, true);
        1:   97:    iter2++;
       1*:   98:    ASSERT_EQ(iter == iter2, false);
        -:   99:}
------------------
_ZN38ConstListIterator_operatorIsEqual_TestC2Ev:
        1:   87:TEST(ConstListIterator, operatorIsEqual)
        1:   87-block  0
------------------
_ZN38ConstListIterator_operatorIsEqual_TestD0Ev:
        1:   87:TEST(ConstListIterator, operatorIsEqual)
        1:   87-block  0
------------------
_ZN38ConstListIterator_operatorIsEqual_TestD2Ev:
        1:   87:TEST(ConstListIterator, operatorIsEqual)
        1:   87-block  0
------------------
_ZN38ConstListIterator_operatorIsEqual_Test8TestBodyEv:
        1:   87:TEST(ConstListIterator, operatorIsEqual)
        -:   88:{
        1:   89:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:   89-block  0
    $$$$$:   89-block  1
    $$$$$:   89-block  2
        1:   90:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:   90-block  0
    $$$$$:   90-block  1
    $$$$$:   90-block  2
        1:   91:    auto node3 = std::make_shared<denis::listNode<int>>(20);
        1:   91-block  0
    $$$$$:   91-block  1
    $$$$$:   91-block  2
        1:   92:    node2->setNextNode(node3);
        1:   92-block  0
        1:   93:    node1->setNextNode(node2);
        1:   94:    auto iter = denis::constListIterator<int>(node1);
    $$$$$:   94-block  0
        1:   95:    auto iter2 = denis::constListIterator<int>(iter);
    $$$$$:   95-block  0
       1*:   96:    ASSERT_EQ(iter == iter2, true);
        1:   96-block  0
    %%%%%:   96-block  1
    %%%%%:   96-block  2
    %%%%%:   96-block  3
    %%%%%:   96-block  4
    $$$$$:   96-block  5
    $$$$$:   96-block  6
    $$$$$:   96-block  7
    $$$$$:   96-block  8
    $$$$$:   96-block  9
    $$$$$:   96-block 10
    $$$$$:   96-block 11
        1:   97:    iter2++;
        1:   97-block  0
        1:   97-block  1
       1*:   98:    ASSERT_EQ(iter == iter2, false);
        1:   98-block  0
    %%%%%:   98-block  1
    %%%%%:   98-block  2
    %%%%%:   98-block  3
    %%%%%:   98-block  4
    $$$$$:   98-block  5
    $$$$$:   98-block  6
    $$$$$:   98-block  7
    $$$$$:   98-block  8
    $$$$$:   98-block  9
    $$$$$:   98-block 10
    $$$$$:   98-block 11
        -:   99:}
------------------
        -:  100:
        4:  101:TEST(ConstListIterator, operatorIsNotEqual)
        -:  102:{
        1:  103:    auto node1 = std::make_shared<denis::listNode<int>>(10);
        1:  104:    auto node2 = std::make_shared<denis::listNode<int>>(15);
        1:  105:    auto node3 = std::make_shared<denis::listNode<int>>(20);
        1:  106:    node2->setNextNode(node3);
        1:  107:    node1->setNextNode(node2);
        1:  108:    auto iter = denis::constListIterator<int>(node1);
        1:  109:    auto iter2 = denis::constListIterator<int>(iter);
       1*:  110:    ASSERT_EQ(iter != iter2, false);
        1:  111:    iter2++;
       1*:  112:    ASSERT_EQ(iter != iter2, true);
        -:  113:}
